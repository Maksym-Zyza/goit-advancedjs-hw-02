{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { showIziToast } from './iziToast';\nimport { convertMs, addLeadingZero } from './helper';\n\nconst TOAST_TIME = 2500;\nconst timer = {\n  btn: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\ntimer.btn.disabled = true;\nlet selectedTime;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedTime = selectedDates[0];\n    if (selectedDates[0] < new Date()) {\n      showIziToast(\n        '❗️ Please choose a date in the future',\n        '#fa903e',\n        TOAST_TIME\n      );\n    } else timer.btn.disabled = false;\n  },\n};\n\nflatpickr('input[type=\"text\"]', options);\ntimer.btn.addEventListener('click', handlerTimer);\n\nfunction handlerTimer() {\n  const currentTime = new Date();\n  let timerTime = Math.floor(selectedTime - currentTime);\n\n  if (timerTime <= 0) return;\n  showIziToast('✅ Timer started', '#9ae39c', TOAST_TIME);\n  const intervalId = setInterval(() => {\n    timer.btn.disabled = true;\n    timerTime -= 1000;\n    setValues(timerTime);\n  }, 1000);\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n    timer.btn.disabled = false;\n    showIziToast('❌ Timer stopped', '#fa903e', TOAST_TIME);\n  }, timerTime);\n}\n\nfunction setValues(time) {\n  const { days, hours, minutes, seconds } = convertMs(time);\n  timer.days.textContent = addLeadingZero(days);\n  timer.hours.textContent = addLeadingZero(hours);\n  timer.minutes.textContent = addLeadingZero(minutes);\n  timer.seconds.textContent = addLeadingZero(seconds);\n}\n"],"names":["TOAST_TIME","timer","selectedTime","options","selectedDates","showIziToast","flatpickr","handlerTimer","currentTime","timerTime","intervalId","setValues","time","days","hours","minutes","seconds","convertMs","addLeadingZero"],"mappings":"oRAKA,MAAMA,EAAa,KACbC,EAAQ,CACZ,IAAK,SAAS,cAAc,oBAAoB,EAChD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EACAA,EAAM,IAAI,SAAW,GACrB,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAeE,EAAc,GACzBA,EAAc,GAAK,IAAI,KACzBC,EACE,wCACA,UACAL,CACR,EACWC,EAAM,IAAI,SAAW,EAC7B,CACH,EAEAK,EAAU,qBAAsBH,CAAO,EACvCF,EAAM,IAAI,iBAAiB,QAASM,CAAY,EAEhD,SAASA,GAAe,CACtB,MAAMC,EAAc,IAAI,KACxB,IAAIC,EAAY,KAAK,MAAMP,EAAeM,CAAW,EAErD,GAAIC,GAAa,EAAG,OACpBJ,EAAa,kBAAmB,UAAWL,CAAU,EACrD,MAAMU,EAAa,YAAY,IAAM,CACnCT,EAAM,IAAI,SAAW,GACrBQ,GAAa,IACbE,EAAUF,CAAS,CACpB,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcC,CAAU,EACxBT,EAAM,IAAI,SAAW,GACrBI,EAAa,kBAAmB,UAAWL,CAAU,CACtD,EAAES,CAAS,CACd,CAEA,SAASE,EAAUC,EAAM,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDX,EAAM,KAAK,YAAciB,EAAeL,CAAI,EAC5CZ,EAAM,MAAM,YAAciB,EAAeJ,CAAK,EAC9Cb,EAAM,QAAQ,YAAciB,EAAeH,CAAO,EAClDd,EAAM,QAAQ,YAAciB,EAAeF,CAAO,CACpD"}